requirement_analysis:
  description: >
    # Main Analysis
    Analyze the user's input: {topic}. If it is not in English, translate it.
    Identify relevant metrics available in the players and statistics tables,
    considering the complete database structure.

    # Available Data
    ## Players Table:
    - player_id: Unique identifier for the player
    - player_name: Full name
    - team_name: Current team
    - league: Current league
    - position: Position
    - preferred_foot: Dominant foot
    - market_value: Market value

    ## Statistics Table:
    ### **Player and Team Information**
    1. **player_id**: Unique identifier for the player.
    2. **player_name**: Full name of the player.
    3. **team_id**: Unique identifier for the team.
    4. **team_name**: Name of the team the player belongs to.

    ### **Performance Metrics**

    #### Goals and Cards
    5. **goals**: Number of goals scored by the player.
    6. **yellow_cards**: Total number of yellow cards received.
    7. **red_cards**: Total number of red cards received.

    #### Duels and Challenges
    8. **ground_duels_won**: Number of ground duels won by the player.
    9. **ground_duels_won_percentage**: Percentage of ground duels won by the player.
    10. **aerial_duels_won**: Number of aerial duels won by the player.
    11. **aerial_duels_won_percentage**: Percentage of aerial duels won by the player.

    #### Dribbling and Tackles
    12. **successful_dribbles**: Total number of successful dribbles.
    13. **successful_dribbles_percentage**: Percentage of successful dribbles.
    14. **tackles**: Total number of tackles made.

    #### Passing
    15. **assists**: Number of assists provided by the player.
    16. **accurate_passes_percentage**: Percentage of passes completed successfully.

    #### Overall Duels
    17. **total_duels_won**: Total number of duels won (ground + aerial).
    18. **total_duels_won_percentage**: Percentage of total duels won.

    #### Playing Time
    19. **minutes_played**: Total number of minutes the player has been on the field.

    ### **Fouls and Discipline**
    20. **was_fouled**: Number of times the player was fouled.
    21. **fouls**: Number of fouls committed by the player.
    22. **dispossessed**: Number of times the player lost possession due to an opponent.

    ### **Match Participation**
    23. **appearances**: Number of matches the player has participated in.

    ### **Goalkeeping Metrics**
    24. **saves**: Total number of saves made (for goalkeepers).

    ### **Defensive Metrics**
    25. **interceptions**: Total number of interceptions made.

    ### **Shooting Metrics**
    26. **shots_on_target**: Number of shots on target by the player.
    27. **expected_goals**: Expected goals metric, which evaluates the quality of chances created or taken by the player.

    # Analysis Requirements
    1. Establish ranges for:
       - Acceptable market value by position
       - Minimum playing time (e.g., 1000 minutes) or appearances (e.g., 15)
       

    2. Define normalization criteria:
       - Weights by position
       - Bonus for versatility (dominant foot)

    3. Select relevant statistics:
       - Primary: High/medium/low importance with justifications
       - Secondary: High/medium/low importance with justifications
       - Consider league and position context

    4. Ensure that the correct position is provided as an instruction. 
       You use the position abbreviations as listed in the statistics document (e.g., "CB" for center-back, "FB" for full-back).
       If the user sets others filters, as age, market value, league, etc., consider them in the analysis.

  expected_output: >
    1. Structured list of selected statistics and orientation of which positions to focus on.
       - Primary: With importance levels and justifications
       - Secondary: With importance levels and justifications

    2. Analysis methodology:
       - Formula for composite index
       Propose a composite index using SQL-compatible logic. For example:
        - For forwards: `(0.5 × goals + 0.3 × assists + 0.2 × successful_dribbles_percentage)`
        - For defenders: `(0.4 × tackles + 0.3 × interceptions + 0.3 × ground_duels_won_percentage)`
        Adjust the weights dynamically based on positional requirements or user-defined constraints.
       - Market value adjustments
       - Fallback strategies

    3. Filtering criteria:
       - Market value ranges
       - Minimum participation thresholds
       - Additional instructions for querying positional data using substring matching (e.g., `LIKE '%CB%'`).
  agent: interpreter_agent

data_analysis:
  description: >
    Perform data analysis on the database to identify the 30 most suitable players,
    considering the complete structure of the players and statistics tables.

    # Analysis Steps
    1. JOIN tables:
       - Combine data from players and statistics
       - Verify information consistency
    
    2. Apply primary filters:
       - Minimum participation thresholds
       - Exclude specific teams:
          -Botafogo
          -Flamengo
          -Palmeiras
          -São Paulo
          -Santos
          -Corinthians
          -Internacional
          -Grêmio
          -Atlético Mineiro
          -Cruzeiro
          -Bahia
          -Fortaleza
          -Boca Juniors
          -River Plate
         - Position matches the provided instruction
            The positions in the table are stored in the following format:

            DR - DL

            Therefore, if you need to search for "DR" or any other position, you should not look for an exact match but instead
            search for values that contain the substring "DR" within them. Use a query that employs partial matching 
            (e.g., LIKE operator) to ensure the desired results are returned.
         - When setting the query, be sure to set the weights for calculate the composite index
         - Other filters provided by the user
    
    3. Normalize data:
       - Calculate composite indices
    
    4. Cost-benefit analysis:
       - Performance-to-value ratio
       
    
    5. Final ranking:
       - Sort by composite index
       - Apply secondary filters
       - Select top 30

    Ensure to report at least 5 players per position, if possible. Trying to report the maximum number of players possible,
    limited to 30.

  expected_output: >
    JSON containing:
    - total_analyzed: Total number of players analyzed
    - selected_players: Array with 30 objects containing:
      - Basic details (id, name, team, league)
      - Market value and dominant foot
      - Statistical data found and used
      - Calculated composite indices
      - Justification for selection
    - detailed_methodology: Process explanation
    - at least 5 players 
    - applied_fallbacks: If applicable
  agent: analyst_agent

report_generation:
  description: >
    Generate a detailed report based on the selected players.

    # Report Structure
    1. Executive Summary
       - Overview of the process
       - Key findings

    2. Methodology
       - Selection criteria
       - Composite indices
       - Cost-benefit analysis

    3. Individual Analysis
       - Complete player data
       - Staticial results found
       - Cost-benefit ratio

    4. Comparative Analysis
       - Full statistics table
       - Rankings by different metrics
       - Value comparison

    5. Recommendations
       - Top candidates
       - Detailed justifications
       - Adaptation considerations

    

  expected_output: >
    Structured report including:
    1. All mentioned sections
    2. Complete comparative tables
    3. Detailed individual analyses
    4. Reliability metrics
    5. League context
    6. Cost-benefit analysis

    Report at least 5 players.
    
  agent: report_agent

markdown_generation:
  description: >
    Format the technical report in markdown, translating it into Portuguese
    while preserving all data and analyses.

    # Mandatory Elements
    1. Clear structure with title hierarchy
    2. Formatted tables including:
       - Market values
       - Composite indices
    3. Proper highlights for:
       - Critical points
       - Top candidates
       - Important warnings
    4. Preservation of numerical data
    5. Consistent translation of technical terms

  expected_output: >
    Markdown file in Portuguese containing:
    1. Complete report structure
    2. Proper formatting of all elements
    3. Preserved and contextualized data
    4. Consistent technical terminology
  agent: markdown_agent
