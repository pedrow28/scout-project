requirement_analysis:
  description: >
    Analyze the provided user input: {topic}. If the input is not in English, translate it.
    Use the statistics document to identify the most relevant metrics for the analysis, ensuring
    that only statistics available in the database are considered. 

    Those are the available statistics:


    ### **Player and Team Information**
    1. **player_id**: Unique identifier for the player.
    2. **player_name**: Full name of the player.
    3. **team_id**: Unique identifier for the team.
    4. **team_name**: Name of the team the player belongs to.

    ### **Performance Metrics**

    #### Goals and Cards
    5. **goals**: Number of goals scored by the player.
    6. **yellow_cards**: Total number of yellow cards received.
    7. **red_cards**: Total number of red cards received.

    #### Duels and Challenges
    8. **ground_duels_won**: Number of ground duels won by the player.
    9. **ground_duels_won_percentage**: Percentage of ground duels won by the player.
    10. **aerial_duels_won**: Number of aerial duels won by the player.
    11. **aerial_duels_won_percentage**: Percentage of aerial duels won by the player.

    #### Dribbling and Tackles
    12. **successful_dribbles**: Total number of successful dribbles.
    13. **successful_dribbles_percentage**: Percentage of successful dribbles.
    14. **tackles**: Total number of tackles made.

    #### Passing
    15. **assists**: Number of assists provided by the player.
    16. **accurate_passes_percentage**: Percentage of passes completed successfully.

    #### Overall Duels
    17. **total_duels_won**: Total number of duels won (ground + aerial).
    18. **total_duels_won_percentage**: Percentage of total duels won.

    #### Playing Time
    19. **minutes_played**: Total number of minutes the player has been on the field.

    ### **Fouls and Discipline**
    20. **was_fouled**: Number of times the player was fouled.
    21. **fouls**: Number of fouls committed by the player.
    22. **dispossessed**: Number of times the player lost possession due to an opponent.

    ### **Match Participation**
    23. **appearances**: Number of matches the player has participated in.

    ### **Goalkeeping Metrics**
    24. **saves**: Total number of saves made (for goalkeepers).

    ### **Defensive Metrics**
    25. **interceptions**: Total number of interceptions made.

    ### **Shooting Metrics**
    26. **shots_on_target**: Number of shots on target by the player.
    27. **expected_goals**: Expected goals metric, which evaluates the quality of chances created or taken by the player.




    Instead of returning a JSON, your role is to provide:
    1. A detailed list of statistics the next agent should fetch from the database, 
       categorized as primary or secondary, with justifications for their selection.
    2. A proposed methodology for calculating a composite index based on the selected statistics.
       This methodology should allow the next agent to evaluate players effectively 
       using SQL operations directly on the database.

    Ensure that:
     - You use the position abbreviations as listed in the statistics document (e.g., "D"(defensive) for center-back, "F" (Forward) for wingers).
     - Remember to consider the table structure when defining the methodology and the SQL operations.
     - DON'T use statistics that are not available in the database.
     - If applicable, provide clear fallback strategies for situations where the initial thresholds return fewer than 5 players.
     - If the user sets a age range, you should consider this in your analysis.
     - If the user sets a position, you should consider this in your analysis.
     - Consider the user's constraints when selecting the statistics and defining the methodology.
     - Set a minimum minutes played threshold to ensure the players have a significant impact on the game (e.g., 1000 minutes or at least 15 appearences).
  expected_output: >
    A structured instruction in natural language containing:
    - A clear list of selected statistics, divided into:
      - `Primary Statistics`: With their importance level (high/medium/low) and justifications.
      - `Secondary Statistics`: With their importance level and justifications.
    - A SQL-compatible methodology, considering the table structure, that includes:
      - A formula or logic for calculating the composite index using the from the selected statistics.
      - Any fallback mechanisms for handling cases with fewer than 5 qualifying players.
    - A clear explanation of how to handle age range constraints in the analysis.
  agent: interpreter_agent


data_analysis:
  description: >
    Perform a database analysis to identify the 30 most suitable players based on the selected statistics.
    
    Upon receiving the statistics along with their assigned importance levels—categorized 
    as either primary or secondary and ranked as high, medium, or low—create a composite 
    index that provides an integrated evaluation of all these statistics, 
    assigning appropriate weights to each based on their significance, rather than evaluating them individually..
    

    You must keep the limit of 30 players and provide a clear explanation of the selection process.
    Try to select many players as possible, but always keep the limit of 30 players.

    Don't search players from the following teams:
    -Botafogo
    -Flamengo
    -Palmeiras
    -São Paulo
    -Santos
    -Corinthians
    -Internacional
    -Grêmio
    -Atlético Mineiro
    -Cruzeiro
    -Bahia
    -Fortaleza
    -Boca Juniors
    -River Plate


    If applicable, provide clear fallback strategies for situations where the initial thresholds return fewer than 5 players.
    Ensure that:
     - You use the position abbreviations as listed in the statistics document (e.g., "D"(defensive) for center-back, "F" (Forward) for wingers).
     - Remember to consider the table structure when defining the methodology and the SQL operations.
     - DON'T use statistics that are not available in the database.
     - If the user sets a age range, you should consider this in your analysis.
     - If the user sets a position, you should consider this in your analysis.
     - Consider the user's constraints when selecting the statistics and defining the methodology.
     - Set a minimum minutes played threshold to ensure the players have a significant impact on the game (e.g., 1000 minutes or at least 15 appearences).

  expected_output: >
    A JSON object containing:
    - `analyzed_players` (integer): Total number of players analyzed.
    - `selected_players` (array of objects): Each object includes:
      - `player_id` (string): Identifier.
      - `name` (string): Player's name.
      - `current_team` (string): Current team.
      - `age` (integer): Player's age.
      - `key_statistics` (object): Each statistic name maps to:
        - `value` (float): Statistic value (absolute).
      - `selection_justification` (string): Reason for selection.
    - `analysis_methodology` (string): Explanation of the selection process.
    - Any fallback mechanisms for handling cases with fewer than 5 qualifying players.
  agent: analyst_agent

report_generation:
  description: >
    Create a detailed report based on the selected players.
    The report should include individual analysis of each player and
    justifications for their selection. Include comparative analysis
    between players and clear recommendations.
    Don't create players, use only the ones that are available in the database.
  expected_output: >
    A structured report containing:
            1. Executive Summary
            2. Analysis Methodology
            3. Player Profiles (for each player):
               - Player Name, Age, and Current Team
               - Statistical Analysis
               - Tactical Fit Assessment
               - Strengths and Areas for Development
            4. Comparative Analysis with a table with the results of the selected players with the following columns:

            player name, player team, all columns with the statiscs used in the analysis, and a column with the suitability for the tactical role.
           
            5. Recommendations
            6. Technical Appendix with detailed statistics
  agent: report_agent

markdown_generation:
  description: >
    Format the technical report in markdown, creating a clear,
    professional, and well-organized structure. Include proper headers,
    tables, and formatting for optimal readability. Ensure all technical
    content is properly formatted and easily navigable. You must translate
    the report to Brazilian Portuguese.
  expected_output: >
    A markdown file, translated to Portuguese, containing:
            1. Title and Table of Contents
            2. All sections from the technical report properly formatted with:
               - Consistent header hierarchy
               - Well-formatted tables for statistics
               - Proper emphasis and highlighting
               - Clear section breaks
               - Formatted lists and bullet points
            3. Save the file as a .md file
  agent: markdown_agent